<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:CustomClasses="CustomClasses.*">
	<mx:Script>
		<![CDATA[
			import component.DataSources.AllDataSources;
			import component.DataSources.AllImageResources;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.controls.Alert;			

            private function clearAll():void {
            	/* Change made by Gaurav Caprihan on 6/21 against Bug # 11 */
            	OnDate.text = "";
            	fromDate.text = "";
            	toDate.text = "";
            	parentDocument.srchPastEvent.clearAll();
            	/* Change made by Gaurav Caprihan on 6/21 against Bug # 11 */            	
            }

            private function doDateSearch():void {
			/* First off, let's set the date ranges in SearchPastEvents.mxml */
				parentDocument.srchPastEvent.fromDate = fromDate.text;
				parentDocument.srchPastEvent.toDate = toDate.text;
			/* Now, we can go ahead and call the search functionality */
		            	
            	callService("manage/events/search.do");
            }
            
/*********************HTTP Service Calls ******************************/		
	        private var service:HTTPService;
	        private var serviceCalled:String = new String("");

			public function updateDS():void
			{
		
			}
			
			public function callService(url:String):void
			{
		            var requestObj:Object = new Object();
		            service = new HTTPService();
		            
		            serviceCalled = url;
		            
					switch (serviceCalled)
					{
						case "manage/events/search.do":	
							if(radioButtonOnDate.selected){
								requestObj.SearchFromDate = OnDate.text;
								requestObj.SearchToDate = "";
							}
							else{
							requestObj.SearchFromDate = fromDate.text;
							requestObj.SearchToDate = toDate.text;
							}
							/* Change made by Gaurav Caprihan on 23 July for Bug # 95 */ 
								component.DataSources.AllDataSources.selectPastEventFromDate = requestObj.SearchFromDate;
								component.DataSources.AllDataSources.selectPastEventToDate = requestObj.SearchToDate;
							/* Change made by Gaurav Caprihan on 23 July for Bug # 95 */							
							service.request = requestObj;
						break;
						default:
							Alert.show("Unrecognized service called");
					}
		            service.url = component.DataSources.AllDataSources.hostName + url;
		            service.resultFormat = "e4x";
	
		            service.method = "GET";
		            service.addEventListener("result", httpResult);
		            service.addEventListener("fault", httpFault);
			        service.send();
	  		}                             
	
	        public function httpFault(event:FaultEvent):void {
	                var faultstring:String = event.fault.faultString;
	                Alert.show(faultstring);
	        }
	
		    public function httpResult(event:ResultEvent):void
		    {
		    	switch (serviceCalled)
		    	{
		        	case "manage/events/search.do":
					    component.DataSources.AllDataSources.pastEvents = new XMLList(event.result);
				    if(component.DataSources.AllDataSources.pastEvents.events.event.length() == 0){
				    	parentDocument.srchPastEvent.searchEventStatusHBox.visible = true;
				    	parentDocument.srchPastEvent.searchEventStatusLabel.text = "Your search returned no results! Pls try a different date/range.";
				    	parentDocument.srchPastEvent.searchEventStatusLabel.visible = "true";
				    }					    
					break;
					default:
						Alert.show("Unrecognized service called");        		
		    	}
			}
/*********************HTTP Service Calls ******************************/		
                        
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="10">
		<mx:VBox width="100%" height="25%" borderStyle="solid"
			paddingTop="5" paddingLeft="10" paddingRight="10" paddingBottom="5"
			verticalAlign="middle" horizontalAlign="left">
			<mx:RadioButton id="radioButtonOnDate" label="On Date" selected="true"/>
			<mx:Form id="searchEvtOnDateForm">
				<mx:FormItem label="Date:" enabled="{radioButtonOnDate.selected}">
		        <mx:DateField 	id="OnDate" enabled="{radioButtonOnDate.selected}"
		        				width="100%" showToday="true" editable="true"/>
				</mx:FormItem>
			</mx:Form>						
		</mx:VBox>
		<mx:VBox width="100%" height="25%" borderStyle="solid"
			paddingTop="5" paddingLeft="10" paddingRight="10" paddingBottom="5"
			verticalAlign="middle" horizontalAlign="left">
			<mx:RadioButton id="radioButtonBetweenDate" label="Between Date Range"/>
			<mx:Form id="searchEvtBetweenDateForm">
				<mx:FormItem label="From:" enabled="{radioButtonBetweenDate.selected}">
		        	<mx:DateField 	id="fromDate" enabled="{radioButtonBetweenDate.selected}"
		        					width="100%" showToday="true" editable="true"/>
				</mx:FormItem>
				<mx:FormItem label="To:" enabled="{radioButtonBetweenDate.selected}">
		        	<mx:DateField 	id="toDate" enabled="{radioButtonBetweenDate.selected}"
		        					width="100%" showToday="true" editable="true"/>
				</mx:FormItem>				
			</mx:Form>						
		</mx:VBox>
		<mx:ControlBar>
			<mx:HBox width="100%" height="100%">
				<mx:Button label="Clear" id="clearButton" click="{clearAll()}"/>
				<mx:Spacer width="100%"/>
				<mx:Button label="Search" id="searchButton" click="{doDateSearch()}"/>				
			</mx:HBox>
		</mx:ControlBar>
	</mx:VBox>
<!-- Added by Gaurav Caprihan for resolving Bug # 49 & 50 -->
	<mx:DateValidator id="validateOnDate" source="{OnDate}" property="text" inputFormat="mm/dd/yyyy" allowedFormatChars="/"/>
	<mx:DateValidator id="validateFromDate" source="{fromDate}" property="text" inputFormat="mm/dd/yyyy" allowedFormatChars="/"/>
	<mx:DateValidator id="validateToDate" source="{toDate}" property="text" inputFormat="mm/dd/yyyy" allowedFormatChars="/"/>
	<CustomClasses:StartEndDateValidator id="ValStartEndDate" source="{toDate}" property="text" inputFormat="MM/DD/YYYY"
	        matches="{fromDate.text}" />
<!-- Added by Gaurav Caprihan for resolving Bug # 49 & 50 -->
</mx:Canvas>