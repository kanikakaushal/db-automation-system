<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="com.hillelcoren.components.*">
	<mx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Label;
			import mx.core.Application;
			import mx.controls.Alert;
    		import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;    		
			import mx.rpc.http.HTTPService;    					
			import component.DataSources.AllDataSources;
			
	        private var service:HTTPService;
		
			public function login():void
			{
	            service = new HTTPService();
				var requestObj:Object = new Object();

	            service.url = component.DataSources.AllDataSources.hostName + "/login.do";
	            service.resultFormat = "e4x";
				requestObj.UserId = userNameText.text;
				requestObj.Password = passwordText.text;
				service.request = requestObj;            
	            service.method = "GET";
	            service.addEventListener("result", httpResult);
	            service.addEventListener("fault", httpFault);
		        service.send();
	  		}                             

	        public function httpFault(event:FaultEvent):void {
	                var faultstring:String = event.fault.faultString;
	                Alert.show(faultstring);
	        }

        public function httpResult(event:ResultEvent):void
        {
        	component.DataSources.AllDataSources.myLoginDS = new XMLList(event.result);
    		if (component.DataSources.AllDataSources.myLoginDS.children().length() == 0)
    		{
    			resetForm();
    			if(loginForm.getChildByName('labelInvalidCredentials') == null)
				{
					var aLabel:Label = new Label();
					aLabel.name = "labelInvalidCredentials";
					aLabel.text = "Invalid Credentials!";
					aLabel.setStyle('fontWeight', 'bold');
					aLabel.setStyle('color', 'red');
					loginForm.addChildAt(aLabel,0);
					
				}
    		}
			else
			{
				parentDocument.populateAccount(component.DataSources.AllDataSources.myLoginDS.account[0]);
				if(loginForm.getChildByName('labelInvalidCredentials') != null)
					loginForm.removeChild(loginForm.getChildByName('labelInvalidCredentials'));
				Application.application.myViewStack.selectedIndex = 1;
			}
		}
		
		private function doLogin(event:KeyboardEvent):void
		{
			if (event.keyCode == Keyboard.ENTER)
			    {
			        login();
			    }			
		}

		public function resetForm() :void
		{
			signinButton.enabled = false;
			userNameText.setCursorPosition(1);
			userNameText.text = null;
			userNameText.validateNow();
			userNameText.text = null;
			userNameText.prompt = "eg. tvc_user";
			passwordText.setCursorPosition(1);
			passwordText.text = null;
			passwordText.validateNow();
			passwordText.text = null;
			passwordText.text = "";
			terminalID.selectedItem = null;
			terminalID.prompt = "Select ID";
		}
		private function validateUs() :void
		{
			signinButton.enabled = (Validator.validateAll([val1,val2]).length == 0);
		}		
		]]>
	</mx:Script>
	<mx:Canvas width="100%" height="100%">
		<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<mx:Panel title="Sign In" id="signinPanel" fontSize="12">
			<mx:Form id="loginForm" backgroundAlpha="0.0" defaultButton="{signinButton}" creationComplete="resetForm()">
<!--				<mx:FormItem label="Username:" id="userNameItem" >
			        <components:PromptTextInput id="userNameText" prompt="eg. tvc_user" change="validateUs()" width="{signinPanel.width*0.5}"/>					
				</mx:FormItem>
				<mx:FormItem label="Password:" id="passwordItem">
			        <components:PromptTextInput id="passwordText" displayAsPassword="true" width="{userNameText.width}"/>
				</mx:FormItem>
-->				<mx:FormItem label="Username:" id="userNameItem" >
			        <components:PromptTextInput id="userNameText" prompt="eg. tvc_user" 
			        							change="validateUs()" width="{signinPanel.width*0.5}"/>					
				</mx:FormItem>
				<mx:FormItem label="Password:" id="passwordItem">
			        <components:PromptTextInput id="passwordText" displayAsPassword="true" 
			        							width="{signinPanel.width*0.5}" change="validateUs()"/>
				</mx:FormItem>
				<mx:HRule width="100%"/>
				<mx:FormItem label="Terminal:" id="lblTerminalID">
			        <mx:ComboBox id="terminalID" labelField="@id" prompt="Select ID" change="validateUs()" width="{signinPanel.width*0.5}"
			        	dataProvider="{component.DataSources.AllDataSources.terminalID.terminals.terminal}"/>
				</mx:FormItem>				
			</mx:Form>
			<mx:ControlBar>
				<mx:Button label="Reset" id="resetButton" click="resetForm()"/>
				<mx:Spacer width="100%" id="spacer"/>
				<mx:Button label="Sign in" id="signinButton" click="login()" keyDown="doLogin(event)" focusEnabled="true"/>
			</mx:ControlBar>
		</mx:Panel>
		</mx:VBox>
	</mx:Canvas>
	<mx:Validator id="val1" source="{userNameText}" property="text" required="true"/>
	<mx:NumberValidator id="val2" source="{terminalID}" property="selectedIndex" 
						lowerThanMinError="This field is required" required="true" minValue="0"/>			
</mx:Canvas>
